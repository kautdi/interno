{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaut1\\\\Desktop\\\\interno\\\\stepanovclient\\\\src\\\\pages\\\\OurTeam.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport TeamsService from '../services/teams-service';\nimport { useState, useEffect } from 'react';\nimport TeamCard from '../components/OurTeam/TeamCard';\nimport Banner from '../components/Banner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function OurTeam(props) {\n  _s();\n  const [teams, setTeams] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await TeamsService.fetchTeams();\n        setTeams(response.data);\n      } catch (error) {\n        console.error('Error fetching teams:', error);\n      }\n    }\n    fetchData();\n  }, []); // Empty dependency array to run the effect only once\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {\n      head: \"Our Professional\",\n      navigate: \"Home / Team\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"teamBlock\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"team-items teamBlock__team-items\",\n        children: teams.map((team, index) => /*#__PURE__*/_jsxDEV(TeamCard, {\n          id: team._id,\n          name: team.fio,\n          position: team.position,\n          img: team.img\n        }, team._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(OurTeam, \"nt+I693XwTdNiKlXHWfWa22BjIk=\");\n_c = OurTeam;\nvar _c;\n$RefreshReg$(_c, \"OurTeam\");","map":{"version":3,"names":["React","TeamsService","useState","useEffect","TeamCard","Banner","jsxDEV","_jsxDEV","Fragment","_Fragment","OurTeam","props","_s","teams","setTeams","fetchData","response","fetchTeams","data","error","console","children","head","navigate","fileName","_jsxFileName","lineNumber","columnNumber","className","map","team","index","id","_id","name","fio","position","img","_c","$RefreshReg$"],"sources":["C:/Users/kaut1/Desktop/interno/stepanovclient/src/pages/OurTeam.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { ITeam } from '../models/ITeam';\r\nimport TeamsService from '../services/teams-service';\r\nimport { useState, useEffect } from 'react';\r\nimport TeamCard from '../components/OurTeam/TeamCard';\r\nimport Banner from '../components/Banner';\r\n\r\nexport interface IOurTeamProps {}\r\n\r\nexport default function OurTeam(props: IOurTeamProps) {\r\n  const [teams, setTeams] = useState<ITeam[]>([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await TeamsService.fetchTeams();\r\n        setTeams(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching teams:', error);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []); // Empty dependency array to run the effect only once\r\n\r\n  return (\r\n    <>\r\n    <Banner head='Our Professional' navigate='Home / Team'/>\r\n      <section className=\"teamBlock\">\r\n        <div className=\"team-items teamBlock__team-items\">\r\n          {teams.map((team, index) => (\r\n            <TeamCard key={team._id} id={team._id} name={team.fio} position={team.position} img={team.img} />\r\n          ))}\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,OAAOC,YAAY,MAAM,2BAA2B;AACpD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAI1C,eAAe,SAASC,OAAOA,CAACC,KAAoB,EAAE;EAAAC,EAAA;EACpD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAU,EAAE,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,eAAeY,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMf,YAAY,CAACgB,UAAU,CAAC,CAAC;QAChDH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF;IAEAJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACER,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACAd,OAAA,CAACF,MAAM;MAACiB,IAAI,EAAC,kBAAkB;MAACC,QAAQ,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtDpB,OAAA;MAASqB,SAAS,EAAC,WAAW;MAAAP,QAAA,eAC5Bd,OAAA;QAAKqB,SAAS,EAAC,kCAAkC;QAAAP,QAAA,EAC9CR,KAAK,CAACgB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBxB,OAAA,CAACH,QAAQ;UAAgB4B,EAAE,EAAEF,IAAI,CAACG,GAAI;UAACC,IAAI,EAAEJ,IAAI,CAACK,GAAI;UAACC,QAAQ,EAAEN,IAAI,CAACM,QAAS;UAACC,GAAG,EAAEP,IAAI,CAACO;QAAI,GAA/EP,IAAI,CAACG,GAAG;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAyE,CACjG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACV,CAAC;AAEP;AAACf,EAAA,CA5BuBF,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}