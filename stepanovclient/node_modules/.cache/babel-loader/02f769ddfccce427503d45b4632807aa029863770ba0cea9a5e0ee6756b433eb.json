{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaut1\\\\Desktop\\\\interno\\\\stepanovclient\\\\src\\\\pages\\\\OurProject.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport NavbarProject from '../components/OurProject/Navbar';\nimport Banner from '../components/Banner';\nimport ProjectCard from '../components/OurProject/ProjectCard';\nimport ProjectsService from '../services/projects-service';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function OurProject({}) {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [categoryId, setCategoryId] = useState(0);\n  const [projects, setProjects] = useState([]);\n  async function fetchProjects() {\n    try {\n      const response = await ProjectsService.projetsSort(categoryId);\n      setProjects(response.data);\n      console.log(projects);\n    } catch (error) {\n      console.error('Error fetching characters:', error);\n    } finally {}\n  }\n  useEffect(() => {\n    if (id !== undefined) {\n      setCategoryId(parseInt(id, 10));\n      console.log(categoryId);\n    }\n  }, []);\n  useEffect(() => {\n    fetchProjects();\n  }, [categoryId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {\n      head: \"Our Project\",\n      navigate: \"Home / Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavbarProject, {\n      value: categoryId,\n      onClickCategory: i => setCategoryId(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projects-items projects_projects-items\",\n        children: projects.map(project => {\n          return /*#__PURE__*/_jsxDEV(ProjectCard, {\n            id: project._id,\n            name: project.name,\n            desc: project.desc,\n            img: project.img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(OurProject, \"kxz5H2KwbtWOM9bIRw3yCMKmCtw=\", false, function () {\n  return [useParams];\n});\n_c = OurProject;\nvar _c;\n$RefreshReg$(_c, \"OurProject\");","map":{"version":3,"names":["React","useEffect","useState","NavbarProject","Banner","ProjectCard","ProjectsService","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","OurProject","_s","id","categoryId","setCategoryId","projects","setProjects","fetchProjects","response","projetsSort","data","console","log","error","undefined","parseInt","children","head","navigate","fileName","_jsxFileName","lineNumber","columnNumber","value","onClickCategory","i","className","map","project","_id","name","desc","img","_c","$RefreshReg$"],"sources":["C:/Users/kaut1/Desktop/interno/stepanovclient/src/pages/OurProject.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport NavbarProject from '../components/OurProject/Navbar';\r\nimport Banner from '../components/Banner';\r\nimport ProjectCard from '../components/OurProject/ProjectCard';\r\nimport { IProject } from '../models/IProject';\r\nimport ProjectsService from '../services/projects-service';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nexport interface IOurProjectProps {\r\n \r\n}\r\n\r\nexport default function OurProject({}: IOurProjectProps) {\r\n  \r\n  const { id } = useParams<{ id: string }>();\r\n  const [categoryId, setCategoryId] = useState<number>(0);\r\n  const [projects, setProjects] = useState<IProject[]>([]);\r\n\r\n  async function fetchProjects(){\r\n    \r\n    try {\r\n      const response = await ProjectsService.projetsSort(categoryId);\r\n      setProjects(response.data);\r\n      console.log(projects);\r\n    } catch (error) {\r\n      console.error('Error fetching characters:', error);\r\n    } finally {\r\n      \r\n    }\r\n  }\r\n  useEffect(() =>{\r\n    if (id !== undefined) {\r\n      setCategoryId(parseInt(id, 10));\r\n      console.log(categoryId)\r\n    }\r\n  }, []);\r\n\r\n  \r\n  useEffect(() =>{\r\n    fetchProjects();\r\n  },[categoryId])\r\n\r\n  return (\r\n    <>\r\n      <Banner head=\"Our Project\" navigate=\"Home / Project\" />\r\n      <NavbarProject value={categoryId} onClickCategory={(i) => setCategoryId(i)} />\r\n      <div className=\"projects\">\r\n        <div className=\"projects-items projects_projects-items\">\r\n           {\r\n            projects.map((project: IProject) => {\r\n              return (\r\n                <ProjectCard id={project._id} name={project.name} desc={project.desc} img={project.img} />\r\n              );\r\n            })\r\n           }\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,iCAAiC;AAC3D,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,WAAW,MAAM,sCAAsC;AAE9D,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAM7C,eAAe,SAASC,UAAUA,CAAC,CAAmB,CAAC,EAAE;EAAAC,EAAA;EAEvD,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAiB,CAAC;EAC1C,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAS,CAAC,CAAC;EACvD,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAa,EAAE,CAAC;EAExD,eAAeiB,aAAaA,CAAA,EAAE;IAE5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,eAAe,CAACe,WAAW,CAACN,UAAU,CAAC;MAC9DG,WAAW,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC1BC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;IACvB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,SAAS,CAEV;EACF;EACAxB,SAAS,CAAC,MAAK;IACb,IAAIa,EAAE,KAAKY,SAAS,EAAE;MACpBV,aAAa,CAACW,QAAQ,CAACb,EAAE,EAAE,EAAE,CAAC,CAAC;MAC/BS,OAAO,CAACC,GAAG,CAACT,UAAU,CAAC;IACzB;EACF,CAAC,EAAE,EAAE,CAAC;EAGNd,SAAS,CAAC,MAAK;IACbkB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAC,CAACJ,UAAU,CAAC,CAAC;EAEf,oBACEN,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA,CAACL,MAAM;MAACyB,IAAI,EAAC,aAAa;MAACC,QAAQ,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvDzB,OAAA,CAACN,aAAa;MAACgC,KAAK,EAAEpB,UAAW;MAACqB,eAAe,EAAGC,CAAC,IAAKrB,aAAa,CAACqB,CAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9EzB,OAAA;MAAK6B,SAAS,EAAC,UAAU;MAAAV,QAAA,eACvBnB,OAAA;QAAK6B,SAAS,EAAC,wCAAwC;QAAAV,QAAA,EAEnDX,QAAQ,CAACsB,GAAG,CAAEC,OAAiB,IAAK;UAClC,oBACE/B,OAAA,CAACJ,WAAW;YAACS,EAAE,EAAE0B,OAAO,CAACC,GAAI;YAACC,IAAI,EAAEF,OAAO,CAACE,IAAK;YAACC,IAAI,EAAEH,OAAO,CAACG,IAAK;YAACC,GAAG,EAAEJ,OAAO,CAACI;UAAI;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAE9F,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAED;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACN,CAAC;AAEP;AAACrB,EAAA,CA/CuBD,UAAU;EAAA,QAEjBL,SAAS;AAAA;AAAAsC,EAAA,GAFFjC,UAAU;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}